{
  "components/custom/calculators/weight-volume": "<form id=\"weightVolume-calc-form\" class=\"form writeReview-form\" action=\"#\">\n  <h5>Weight vs Volume</h5>\n  <div class=\"form-row\"></div>\n  <div class=\"form-row\">\n    <label for=\"weightVolume-weight\">Weight</label>\n    <input type=\"number\" name=\"weightVolume-weight\" pattern=\"[0-9]\" val=\"\" />\n    <select name=\"weightVolume-sa-unit\">\n      <option value=\"pounds\">Pounds (LB)</option>\n      <option value=\"ounces\">Ounces (Oz)</option>\n      <option value=\"grams\">Grams (g)</option>\n      <option value=\"kilograms\">Kilograms (kg)</option>\n    </select>\n  </div>\n  <div class=\"form-row\">\n    <label for=\"weightVolume-result-unit\">Display Results As</label>\n    <select name=\"weightVolume-result-unit\">\n      <option value=\"cubic inches\">Cubic Inches (in&sup3;)</option>\n      <option value=\"fluid ounces\">Fluid Ounces (fl oz)</option>\n      <option value=\"cups\">Cups (c)</option>\n      <option value=\"cubic feet\">Cubic Feet (ft&sup3;)</option>\n      <option value=\"cubic centimeters\">Cubic Centimeters (cm&sup3;)</option>\n      <option value=\"milliliters\">Milliliters (ml)</option>\n      <option value=\"liters\">Liters (l)</option>\n      <option value=\"cubic meters\">Cubic Meters (m&sup3;)</option>\n    </select>\n  </div>\n  <div class=\"form-row\">\n    <button\n      class=\"button button--primary\"\n      type=\"submit\"\n      id=\"weightVolume-submit\"\n    >\n      Calculate\n    </button>\n  </div>\n  <div class=\"form-row result-row\">\n    Result: <span class=\"weightVolume-form-result result-area\"></span>\n  </div>\n</form>\n\n<script>\n  const roundToHundredthsPlace = (number) => Math.round(number * 100) / 100;\n\n  $('#weightVolume-submit').click(function (event) {\n    event.preventDefault();\n    const weight = $('input[name=\"weightVolume-weight\"').val();\n    const weightUnit = $('select[name=\"weightVolume-sa-unit\"').val();\n    const resultUnit = $('select[name=\"weightVolume-result-unit\"').val();\n\n    $('.weightVolume-form-result').html(\n      weightVolumeFormula(weight, weightUnit, specificVolume, resultUnit)\n    );\n  });\n\n  function weightVolumeFormula(weight, weightUnit, specificVolume, resultUnit) {\n    weight = roundToHundredthsPlace(parseFloat(weight));\n    weight = convertWeight(weight, weightUnit, UNIT_WEIGHT_LBS);\n\n    specificVolume = parseFloat(specificVolume);\n\n    let result = roundToHundredthsPlace(weight * specificVolume);\n    result = convertVolume(result, UNIT_VOLUME_IN3, resultUnit);\n\n    const resultString =\n      result.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      }) + writeUnit(resultUnit);\n\n    return resultString;\n  }\n\n  // CONVERT WEIGHT\n  function convertWeight(value, inputUnit, outputUnit) {\n    value = roundToHundredthsPlace(value);\n    let normalizedValue;\n    switch (inputUnit) {\n      case UNIT_WEIGHT_LBS:\n        normalizedValue = value * 453.59;\n        break;\n      case UNIT_WEIGHT_OZ:\n        normalizedValue = value * 28.35;\n        break;\n      case UNIT_WEIGHT_G:\n        normalizedValue = value;\n        break;\n      case UNIT_WEIGHT_KG:\n        normalizedValue = value * 1000.0;\n        break;\n      default:\n        throw inputUnit + ' is not a valid unit';\n    }\n    normalizedValue = roundToHundredthsPlace(normalizedValue);\n\n    let convertedValue;\n    switch (outputUnit) {\n      case UNIT_WEIGHT_LBS:\n        convertedValue = normalizedValue / 453.59;\n        break;\n      case UNIT_WEIGHT_OZ:\n        convertedValue = normalizedValue / 28.35;\n        break;\n      case UNIT_WEIGHT_G:\n        convertedValue = normalizedValue;\n        break;\n      case UNIT_WEIGHT_KG:\n        convertedValue = normalizedValue / 1000.0;\n        break;\n      default:\n        throw inputUnit + ' is not a valid unit';\n    }\n    convertedValue = roundToHundredthsPlace(convertedValue);\n    return convertedValue;\n  }\n\n  // CONVERT VOLUME\n  function convertVolume(value, inputUnit, outputUnit) {\n    value = roundToHundredthsPlace(value);\n    let normalizedValue;\n    switch (inputUnit) {\n      case UNIT_VOLUME_IN3:\n        normalizedValue = value * 16.39;\n        break;\n      case UNIT_VOLUME_FLOZ:\n        normalizedValue = value * 29.58;\n        break;\n      case UNIT_VOLUME_C:\n        normalizedValue = value * 240.0;\n        break;\n      case UNIT_VOLUME_FT3:\n        normalizedValue = value * 28316.8;\n        break;\n      case UNIT_VOLUME_CM3:\n        normalizedValue = value;\n        break;\n      case UNIT_VOLUME_ML:\n        normalizedValue = value;\n        break;\n      case UNIT_VOLUME_L:\n        normalizedValue = value * 1000.0;\n        break;\n      case UNIT_VOLUME_M3:\n        normalizedValue = value * 1000000.0;\n        break;\n      default:\n        throw inputUnit + ' is not a valid unit';\n    }\n    normalizedValue = roundToHundredthsPlace(normalizedValue);\n\n    let convertedValue;\n    switch (outputUnit) {\n      case UNIT_VOLUME_IN3:\n        convertedValue = normalizedValue / 16.39;\n        break;\n      case UNIT_VOLUME_FLOZ:\n        convertedValue = normalizedValue / 29.57;\n        break;\n      case UNIT_VOLUME_C:\n        convertedValue = normalizedValue / 240.0;\n        break;\n      case UNIT_VOLUME_FT3:\n        convertedValue = normalizedValue / 28316.8;\n        break;\n      case UNIT_VOLUME_CM3:\n        convertedValue = normalizedValue;\n        break;\n      case UNIT_VOLUME_ML:\n        convertedValue = normalizedValue;\n        break;\n      case UNIT_VOLUME_L:\n        convertedValue = normalizedValue / 1000.0;\n        break;\n      case UNIT_VOLUME_M3:\n        convertedValue = normalizedValue / 1000000.0;\n        break;\n      default:\n        throw inputUnit + ' is not a valid unit';\n    }\n    convertedValue = roundToHundredthsPlace(convertedValue);\n    return convertedValue;\n  }\n\n  function writeUnit(unit) {\n    let unitHTMLString;\n    switch (unit) {\n      case UNIT_WEIGHT_LBS:\n        unitHTMLString = ' lbs';\n        break;\n      case UNIT_WEIGHT_OZ:\n        unitHTMLString = ' oz';\n        break;\n      case UNIT_WEIGHT_G:\n        unitHTMLString = ' g';\n        break;\n      case UNIT_WEIGHT_KG:\n        unitHTMLString = ' kg';\n        break;\n      case UNIT_VOLUME_IN3:\n        unitHTMLString = ' in&sup3;';\n        break;\n      case UNIT_VOLUME_FLOZ:\n        unitHTMLString = ' fl oz';\n        break;\n      case UNIT_VOLUME_C:\n        unitHTMLString = ' c';\n        break;\n      case UNIT_VOLUME_FT3:\n        unitHTMLString = ' ft&sup3;';\n        break;\n      case UNIT_VOLUME_CM3:\n        unitHTMLString = ' cm&sup3;';\n        break;\n      case UNIT_VOLUME_ML:\n        unitHTMLString = ' ml';\n        break;\n      case UNIT_VOLUME_L:\n        unitHTMLString = ' l';\n        break;\n      case UNIT_VOLUME_M3:\n        unitHTMLString = ' m&sup3;';\n        break;\n      case UNIT_SURFACE_AREA_IN2:\n        unitHTMLString = ' in&sup2;';\n        break;\n      case UNIT_SURFACE_AREA_FT2:\n        unitHTMLString = ' ft&sup2;';\n        break;\n      case UNIT_SURFACE_AREA_MM2:\n        unitHTMLString = ' mm&sup2;';\n        break;\n      case UNIT_SURFACE_AREA_CM2:\n        unitHTMLString = ' cm&sup2;';\n        break;\n      case UNIT_SURFACE_AREA_M2:\n        unitHTMLString = ' m&sup2;';\n        break;\n      case UNIT_THICKNESS_IN:\n        unitHTMLString = ' in';\n        break;\n      case UNIT_THICKNESS_FT:\n        unitHTMLString = ' ft';\n        break;\n      case UNIT_THICKNESS_MM:\n        unitHTMLString = ' mm';\n        break;\n      case UNIT_THICKNESS_CM:\n        unitHTMLString = ' cm';\n        break;\n      case UNIT_THICKNESS_M:\n        unitHTMLString = ' m';\n        break;\n    }\n\n    return unitHTMLString;\n  }\n\n  const UNIT_WEIGHT_LBS = 'pounds';\n  const UNIT_WEIGHT_OZ = 'ounces';\n  const UNIT_WEIGHT_G = 'grams';\n  const UNIT_WEIGHT_KG = 'kilograms';\n  const UNIT_VOLUME_IN3 = 'cubic inches';\n  const UNIT_VOLUME_FLOZ = 'fluid ounces';\n  const UNIT_VOLUME_C = 'cups';\n  const UNIT_VOLUME_FT3 = 'cubic feet';\n  const UNIT_VOLUME_CM3 = 'cubic centimeters';\n  const UNIT_VOLUME_ML = 'milliliters';\n  const UNIT_VOLUME_L = 'liters';\n  const UNIT_VOLUME_M3 = 'cubic meters';\n  const UNIT_SURFACE_AREA_IN2 = 'square inches';\n  const UNIT_SURFACE_AREA_FT2 = 'square feet';\n  const UNIT_SURFACE_AREA_MM2 = 'square millimeters';\n  const UNIT_SURFACE_AREA_CM2 = 'square centimeters';\n  const UNIT_SURFACE_AREA_M2 = 'square meters';\n  const UNIT_THICKNESS_IN = 'inches';\n  const UNIT_THICKNESS_FT = 'feet';\n  const UNIT_THICKNESS_MM = 'millimeters';\n  const UNIT_THICKNESS_CM = 'centimeters';\n  const UNIT_THICKNESS_M = 'meters';\n</script>\n"
}
