{
  "components/custom/calculators/weight-surface": "<form id=\"weightSurface-calc-form\" class=\"form writeReview-form\" action=\"#\">\n  <h5>Weight vs Surface Area</h5>\n  <div class=\"form-row\"></div>\n  <div class=\"form-row\">\n    <label for=\"weightSurface-weight\">Weight</label>\n    <input type=\"number\" name=\"weightSurface-weight\" pattern=\"[0-9]\" val=\"\" />\n    <select name=\"weightSurface-sa-unit\">\n      <option value=\"pounds\">Pounds (Lb)</option>\n      <option value=\"ounces\">Ounces (Oz)</option>\n      <option value=\"grams\">Grams (g)</option>\n      <option value=\"kilograms\">Kilograms (kg)</option>\n    </select>\n  </div>\n  <div class=\"form-row\">\n    <label for=\"weightSurface-thickness\">Thickness</label>\n    <input\n      type=\"number\"\n      name=\"weightSurface-thickness\"\n      pattern=\"[0-9]\"\n      val=\"\"\n    />\n    <select name=\"weightSurface-thickness-unit\">\n      <option value=\"inches\">Inches (in)</option>\n      <option value=\"feet\">Feet (ft)</option>\n      <option value=\"millimeters\">Millimeters (mm)</option>\n      <option value=\"centimeters\">Centimeters (cm)</option>\n      <option value=\"meters\">Meters (m)</option>\n    </select>\n  </div>\n  <div class=\"form-row\">\n    <label for=\"weightSurface-result-unit\">Display Results As</label>\n    <select name=\"weightSurface-result-unit\">\n      <option value=\"square inches\">Square Inches (in&sup2;)</option>\n      <option value=\"square feet\">Square Feet (ft&sup2;)</option>\n      <option value=\"square millimeters\">Square Millimeters (mm&sup2;)</option>\n      <option value=\"square centimeters\">Square Centimeters (cm&sup2;)</option>\n      <option value=\"square meters\">Square Meters (m&sup2;)</option>\n    </select>\n  </div>\n  <div class=\"form-row\">\n    <button\n      class=\"button button--primary\"\n      type=\"submit\"\n      id=\"weightSurface-submit\"\n    >\n      Calculate\n    </button>\n  </div>\n  <div class=\"form-row result-row\">\n    Result: <span class=\"weightSurface-form-result result-area\"></span>\n  </div>\n</form>\n\n<script>\n  // roundToHundredthsPlace comes from weight-volume.html\n  // weightUnit strings come from weight-volume.html\n\n  $('#weightSurface-submit').click(function (event) {\n    event.preventDefault();\n    var weight = $('input[name=\"weightSurface-weight\"]').val();\n    var weightUnit = $('select[name=\"weightSurface-sa-unit\"]').val();\n    var thickness = $('input[name=\"weightSurface-thickness\"]').val();\n    var thicknessUnit = $('select[name=\"weightSurface-thickness-unit\"]').val();\n    var resultUnit = $('select[name=\"weightSurface-result-unit\"]').val();\n\n    $('.weightSurface-form-result').html(\n      weightSurfaceAreaFormula(\n        weight,\n        weightUnit,\n        specificVolume,\n        thickness,\n        thicknessUnit,\n        resultUnit\n      )\n    );\n    console.log(weightSurfaceAreaFormula());\n  });\n\n  // FIND THE SURFACE AREA FROM THE WEIGHT\n  function weightSurfaceAreaFormula(\n    weight,\n    weightUnit,\n    specificVolume,\n    thickness,\n    thicknessUnit,\n    resultUnit\n  ) {\n    weight = roundToHundredthsPlace(parseFloat(weight));\n    weight = convertWeight(weight, weightUnit, UNIT_WEIGHT_LBS);\n\n    specificVolume = parseFloat(specificVolume);\n\n    thickness = roundToHundredthsPlace(parseFloat(thickness));\n    thickness = convertThickness(thickness, thicknessUnit, UNIT_THICKNESS_IN);\n\n    var result = roundToHundredthsPlace((weight * specificVolume) / thickness);\n    result = convertSurfaceArea(result, UNIT_SURFACE_AREA_IN2, resultUnit);\n\n    var resultString =\n      result.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      }) + writeUnit(resultUnit);\n\n    return resultString;\n  }\n\n  // CONVERT WEIGHT\n  function convertWeight(value, inputUnit, outputUnit) {\n    value = roundToHundredthsPlace(value);\n    let normalizedValue;\n    switch (inputUnit) {\n      case UNIT_WEIGHT_LBS:\n        normalizedValue = value * 453.59;\n        break;\n      case UNIT_WEIGHT_OZ:\n        normalizedValue = value * 28.35;\n        break;\n      case UNIT_WEIGHT_G:\n        normalizedValue = value;\n        break;\n      case UNIT_WEIGHT_KG:\n        normalizedValue = value * 1000.0;\n        break;\n      default:\n        throw inputUnit + ' is not a valid unit';\n    }\n    normalizedValue = roundToHundredthsPlace(normalizedValue);\n\n    let convertedValue;\n    switch (outputUnit) {\n      case UNIT_WEIGHT_LBS:\n        convertedValue = normalizedValue / 453.59;\n        break;\n      case UNIT_WEIGHT_OZ:\n        convertedValue = normalizedValue / 28.35;\n        break;\n      case UNIT_WEIGHT_G:\n        convertedValue = normalizedValue;\n        break;\n      case UNIT_WEIGHT_KG:\n        convertedValue = normalizedValue / 1000.0;\n        break;\n      default:\n        throw inputUnit + ' is not a valid unit';\n    }\n    convertedValue = roundToHundredthsPlace(convertedValue);\n    return convertedValue;\n  }\n\n  // CONVERT THICKNESS\n  function convertThickness(value, inputUnit, outputUnit) {\n    value = roundToHundredthsPlace(value);\n    let normalizedValue;\n    switch (inputUnit) {\n      case UNIT_THICKNESS_IN:\n        normalizedValue = value;\n        break;\n      case UNIT_THICKNESS_FT:\n        normalizedValue = value * 12;\n        break;\n      case UNIT_THICKNESS_MM:\n        normalizedValue = value * 0.0393701;\n        break;\n      case UNIT_THICKNESS_CM:\n        normalizedValue = value * 0.393701;\n        break;\n      case UNIT_THICKNESS_M:\n        normalizedValue = value * 39.3701;\n        break;\n      default:\n        throw inputUnit + ' is not a valid unit';\n    }\n    normalizedValue = roundToHundredthsPlace(normalizedValue);\n\n    let convertedValue;\n    switch (outputUnit) {\n      case UNIT_THICKNESS_IN:\n        convertedValue = normalizedValue;\n        break;\n      case UNIT_THICKNESS_FT:\n        convertedValue = normalizedValue / 12;\n        break;\n      case UNIT_THICKNESS_MM:\n        convertedValue = normalizedValue / 0.0393701;\n        break;\n      case UNIT_THICKNESS_CM:\n        convertedValue = normalizedValue / 0.393701;\n        break;\n      case UNIT_THICKNESS_M:\n        convertedValue = normalizedValue / 39.3701;\n        break;\n      default:\n        throw inputUnit + ' is not a valid unit';\n    }\n    convertedValue = roundToHundredthsPlace(convertedValue);\n    return convertedValue;\n  }\n\n  // CONVERT SURFACE AREA\n  function convertSurfaceArea(value, inputUnit, outputUnit) {\n    value = roundToHundredthsPlace(value);\n    let normalizedValue;\n    switch (inputUnit) {\n      case UNIT_SURFACE_AREA_IN2:\n        normalizedValue = value;\n        break;\n      case UNIT_SURFACE_AREA_FT2:\n        normalizedValue = value * 144;\n        break;\n      case UNIT_SURFACE_AREA_MM2:\n        normalizedValue = value * 0.00155;\n        break;\n      case UNIT_SURFACE_AREA_CM2:\n        normalizedValue = value * 0.155;\n        break;\n      case UNIT_SURFACE_AREA_M2:\n        normalizedValue = value * 1550;\n        break;\n      default:\n        throw inputUnit + ' is not a valid unit';\n    }\n    normalizedValue = roundToHundredthsPlace(normalizedValue);\n\n    let convertedValue;\n    switch (outputUnit) {\n      case UNIT_SURFACE_AREA_IN2:\n        convertedValue = normalizedValue;\n        break;\n      case UNIT_SURFACE_AREA_FT2:\n        convertedValue = normalizedValue / 144;\n        break;\n      case UNIT_SURFACE_AREA_MM2:\n        convertedValue = normalizedValue / 0.00155;\n        break;\n      case UNIT_SURFACE_AREA_CM2:\n        convertedValue = normalizedValue / 0.155;\n        break;\n      case UNIT_SURFACE_AREA_M2:\n        convertedValue = normalizedValue / 1550;\n        break;\n      default:\n        throw inputUnit + ' is not a valid unit';\n    }\n    convertedValue = roundToHundredthsPlace(convertedValue);\n    return convertedValue;\n  }\n\n  function writeUnit(unit) {\n    let unitHTMLString;\n    switch (unit) {\n      case UNIT_WEIGHT_LBS:\n        unitHTMLString = ' lbs';\n        break;\n      case UNIT_WEIGHT_OZ:\n        unitHTMLString = ' oz';\n        break;\n      case UNIT_WEIGHT_G:\n        unitHTMLString = ' g';\n        break;\n      case UNIT_WEIGHT_KG:\n        unitHTMLString = ' kg';\n        break;\n      case UNIT_VOLUME_IN3:\n        unitHTMLString = ' in&sup3;';\n        break;\n      case UNIT_VOLUME_FLOZ:\n        unitHTMLString = ' fl oz';\n        break;\n      case UNIT_VOLUME_C:\n        unitHTMLString = ' c';\n        break;\n      case UNIT_VOLUME_FT3:\n        unitHTMLString = ' ft&sup3;';\n        break;\n      case UNIT_VOLUME_CM3:\n        unitHTMLString = ' cm&sup3;';\n        break;\n      case UNIT_VOLUME_ML:\n        unitHTMLString = ' ml';\n        break;\n      case UNIT_VOLUME_L:\n        unitHTMLString = ' l';\n        break;\n      case UNIT_VOLUME_M3:\n        unitHTMLString = ' m&sup3;';\n        break;\n      case UNIT_SURFACE_AREA_IN2:\n        unitHTMLString = ' in&sup2;';\n        break;\n      case UNIT_SURFACE_AREA_FT2:\n        unitHTMLString = ' ft&sup2;';\n        break;\n      case UNIT_SURFACE_AREA_MM2:\n        unitHTMLString = ' mm&sup2;';\n        break;\n      case UNIT_SURFACE_AREA_CM2:\n        unitHTMLString = ' cm&sup2;';\n        break;\n      case UNIT_SURFACE_AREA_M2:\n        unitHTMLString = ' m&sup2;';\n        break;\n      case UNIT_THICKNESS_IN:\n        unitHTMLString = ' in';\n        break;\n      case UNIT_THICKNESS_FT:\n        unitHTMLString = ' ft';\n        break;\n      case UNIT_THICKNESS_MM:\n        unitHTMLString = ' mm';\n        break;\n      case UNIT_THICKNESS_CM:\n        unitHTMLString = ' cm';\n        break;\n      case UNIT_THICKNESS_M:\n        unitHTMLString = ' m';\n        break;\n    }\n\n    return unitHTMLString;\n  }\n</script>\n"
}
